{"version":3,"sources":["App.js"],"names":["firebase","length","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","YellowBox","ignoreWarnings","chatsRef","collection","App","useState","user","setUser","name","setName","messages","setMessages","useEffect","a","async","AsyncStorage","getItem","JSON","parse","readUser","unsubscribe","onSnapshot","querySnapshot","messagesFirestore","docChanges","filter","type","map","message","doc","data","createdAt","toDate","sort","b","getTime","appendMessages","useCallback","previousMessages","GiftedChat","append","View","style","styles","container","Text","header","sub","home","TextInput","input","placeholder","value","onChangeText","buttons","Button","title","onPress","_id","Math","random","toString","substring","setItem","stringify","color","onSend","writes","m","add","Promise","all","StyleSheet","create","flex","fontSize","backgroundColor","alignItems","justifyContent","padding","textStyle","height","width","borderWidth","marginBottom","borderColor","borderRadius","fontStyle","fontWeight","paddingBottom","fontFamily","borderStyle","bottomalign","headerContainer","marginTop","marginHorizontal","svgCurve","position","Dimensions","get","headerText","textAlign"],"mappings":"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","file":"static/js/app.3f2b4f1a.chunk.js","sourcesContent":["//@refresh reset\n\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport Svg, { Path } from 'react-native-svg';\nimport WavyHeader from './src/WavyHeader';\n\nimport {\n  StyleSheet,\n  Text,\n  View,\n  YellowBox,\n  TextInput,\n  Button,\n  Dimensions\n} from \"react-native\";\n//import GradientHeader from \"react-native-gradient-header\";\nimport { GiftedChat } from 'react-native-gifted-chat';\nimport * as firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCuJ2L22WLzLPWx-zmj3V9H-puDZo63sks\",\n  authDomain: \"react-native-chat-pg.firebaseapp.com\",\n  databaseURL: \"https://react-native-chat-pg.firebaseio.com\",\n  projectId: \"react-native-chat-pg\",\n  storageBucket: \"react-native-chat-pg.appspot.com\",\n  messagingSenderId: \"231051248457\",\n  appId: \"1:231051248457:web:179bd29186f4e268e91098\",\n};\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig)\n}\n\nYellowBox.ignoreWarnings([\"Setting a timer for a long period of time\"]);\n// yahan db define karke read karega\n// can use document also but using collection .. patalagao\nconst db = firebase.firestore();\nconst chatsRef = db.collection('chats');\n\nexport default function App() {\n  const [user, setUser] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    readUser();\n    const unsubscribe = chatsRef.onSnapshot((querySnapshot) => {\n      //could have used querySnapshot.forEach for getting all values\n      const messagesFirestore = querySnapshot\n        .docChanges()\n        .filter(({ type }) => type == \"added\")\n        .map(({doc}) => {\n          const message = doc.data();\n          return {...message, createdAt: message.createdAt.toDate() };\n        }).sort((a,b) => b.createdAt.getTime() - a.createdAt.getTime() );\n        appendMessages(messagesFirestore);\n    });\n    return () => unsubscribe()\n  }, []);\n\n  const appendMessages = useCallback(\n    (messages) => {\n        setMessages((previousMessages) => GiftedChat.append(previousMessages, messages))\n    },\n    [messages]\n)\n\n  async function readUser() {\n    const user = await AsyncStorage.getItem(\"user\");\n    if (user) {\n      setUser(JSON.parse(user));\n    }\n  }\n\n  async function handlePress() {\n    const _id = Math.random().toString(36).substring(7);\n    const user = { _id, name };\n    await AsyncStorage.setItem(\"user\", JSON.stringify(user));\n    setUser(user);\n  }\n\n  if (!user) {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.header}>Assignmets Yahan</Text>\n        <Text style={styles.sub}> Enter Secret Chat Room  </Text>\n        <View style={styles.container}>\n          \n        </View>\n        <View style={styles.home}>\n        <TextInput\n          style={styles.input}\n          placeholder=\"Enter your name\"\n          value={name}\n          onChangeText={setName}\n        />\n        <View style={styles.buttons}>\n        <Button title=\"Enter the chat\" onPress={handlePress} color=\"#2b0956\"  />\n        </View>\n        </View>\n      </View>\n    );\n  }\n\n  async function handleSend(messages) {\n    const writes = messages.map(m => chatsRef.add(m));\n    await Promise.all(writes);\n  }\n  \n  \n  return (\n      <GiftedChat messages={messages} user={user} onSend={handleSend} />\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    fontSize: 56,\n    backgroundColor: \"#fff2f2\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 20,\n  },\n  textStyle: {\n    fontSize: 56,\n    color: \"#C1E3FF\",\n  },\n  input: {\n    color:'#6b0956',\n    backgroundColor: \"#fff\",\n    height: 5,\n    width: \"100%\",\n    borderWidth: 1,\n    marginBottom: 50,\n    padding: 30,\n    borderColor: \"gray\",\n    borderRadius: 5,\n  },\n  buttons: {\n    width: '100%',\n    fontStyle: 'bold',\n    borderRadius: 5,\n    height: 50\n  },\n  header: {\n    fontWeight: 'bold',\n    fontSize: 75,\n    //fontFamily: 'sans',\n    padding: 30,\n    color: '#755985',\n    paddingBottom: 50,\n    \n  },\n  sub: {\n    backgroundColor:'#ffe6e7',\n    fontSize: 24,\n    fontFamily: 'sans-serif',\n    padding: 10,\n    color: '#442b63',\n    borderWidth: 1,\n    marginBottom: 30,\n    borderStyle: 'dashed',\n    borderColor: 'ffffff'\n  },\n  home:{\n\n  },\n  bottomalign:{\n\n  },\n  headerContainer: {\n    marginTop: 10,\n    marginHorizontal: 10\n  },\n  svgCurve: {\n    position: 'absolute',\n    width: Dimensions.get('window').width\n  },\n  headerText: {\n    fontSize: 56,\n    fontWeight: 'bold',\n    // change the color property for better output\n    color: '#fff',\n    textAlign: 'center',\n  }\n});\n"],"sourceRoot":""}